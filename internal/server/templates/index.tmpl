<!doctype html>
<html lang="en">

<head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <title>{{ .title}}</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/css/bootstrap.min.css" rel="stylesheet"
        integrity="sha384-GLhlTQ8iRABdZLl6O3oVMWSktQOp6b7In1Zl3/Jr59b6EGGoI1aFkw7cmDA6j6gD" crossorigin="anonymous">
</head>

<body class="vh-100" onclick="refresh()">
    <nav class="navbar bg-body-tertiary">
        <div class="container-fluid">
            <a class="navbar-brand" href="#">{{ .title}}</a>
        </div>
    </nav>
    <div id="app" class="container">
        <h5 class="py-2">Preview</h5>
        <div id="clipboard" class="border rounded d-flex justify-content-center" style="height: 12rem;"></div>
        <h5 class="py-2">Log</h5>
        <div id="log" class="border rounded p-2 lh-1 text-secondary bg-light-subtle" style="height: 8rem;"></div>
        <h6 class="pt-3">Notes</h6>
        <ul class="list-unstyled">
            <li>Click on the page to synchronize the clipboard.</li>
            <li>Drag and drop a file onto the page.</li>
        </ul>
    </div>
    <script src="https://cdn.jsdelivr.net/npm/jquery@3.7.1/dist/jquery.min.js"
        integrity="sha256-/JqT3SQfawRcv/BIHPThkBvs0OEvtFFmqPF/lYI/Cxo=" crossorigin="anonymous"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/js/bootstrap.bundle.min.js"
        integrity="sha384-/mhDoLbDldZc3qpsJHpLogda//BVZbgYuw6kof4u2FrCedxOtgRZDTHgHUhOCVim"
        crossorigin="anonymous"></script>
    <script src="https://cdn.jsdelivr.net/npm/axios@1.1.2/dist/axios.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/clipboard@2.0.11/dist/clipboard.min.js"></script>
</body>

<script>
    var xindex = 0
    var id = ""

    function resetLog() {
        $("#log").html("")
    }
    function infoLog(text) {
        $("#log").append(text + "<br/>")
    }

    async function copyBlobToClipboard(blob) {
        if (id == blob.type + blob.size) {
            return
        }
        id = blob.type + blob.size
        let type = blob.type
        if (type == "text/html") {
            await blob.text().then(text => {
                type = "text/plain";
                blob = new Blob([text], { type });
            })
        }
        let data = [new ClipboardItem({ [type]: blob })]
        navigator.clipboard.write(data).then(
            () => {
                console.log("success")
            },
            (err) => {
                console.log(err)
            },
        )
    }

    pullClipboard = function () {
        axios({
            method: 'get',
            url: '/clipboard',
            responseType: 'blob',
            headers: { 'X-Index': xindex }
        }).then(function (response) {
            // console.log(response.headers)
            if (response.status != 200) {
                return
            }
            if (response.headers["x-index"] == 0) {
                return
            }
            if (xindex == response.headers["x-index"]) {
                return
            }
            xindex = response.headers["x-index"]
            let xtype = response.headers["x-type"]
            if (xtype == undefined || xtype == "") {
                return
            }
            if (xtype == "text") {
                copyBlobToClipboard(response.data)
                response.data.text().then(text => {
                    $("#clipboard").html($('<textarea class="w-100 border-0 overflow-hidden m-1" style="resize: none"></textarea>').text(text))
                })
            }
            if (xtype == "screenshot") {
                copyBlobToClipboard(response.data)
                $("#clipboard").html("<img class=\"object-fit-contain mw-100\" src=" + URL.createObjectURL(response.data) + "></img>")
            }
            if (xtype == "file") {
                let xfilename = decodeURI(response.headers["x-filename"])
                $("#clipboard").html("<a class=\"m-auto text-truncate\" href=" + URL.createObjectURL(response.data) + " download=\"" + xfilename + "\">" + xfilename + "</a>")
            }
            infoLog("received " + response.headers["x-type"] + "(" + xindex + ")")
        })
    }

    async function pushClipboard() {
        try {
            let xtype = ""
            const clipboardItems = await navigator.clipboard.read();
            for (const clipboardItem of clipboardItems) {
                for (const type of clipboardItem.types) {
                    // console.log(t)
                    const blob = await clipboardItem.getType(type);
                    if (id == blob.type + blob.size) {
                        return
                    }
                    id = blob.type + blob.size
                    if (type == "text/plain") {
                        xtype = "text"
                        blob.text().then(text => {
                            $("#clipboard").html($('<textarea class="w-100 border-0 overflow-hidden m-1" style="resize: none"></textarea>').text(text))
                        })
                    }
                    if (type == "image/png") {
                        xtype = "screenshot"
                        $("#clipboard").html("<img class=\"object-fit-contain mw-100\" src=" + URL.createObjectURL(blob) + "></img>")
                    }
                    if (xtype == "") {
                        return
                    }
                    axios({
                        method: 'post',
                        url: '/clipboard',
                        headers: {
                            "Content-Type": blob.type,
                            'X-Type': xtype,
                            'X-FileName': ""
                        },
                        data: blob
                    }).then(function (response) {
                        // console.log(response.headers)
                        if (response.status != 200) {
                            return
                        }
                        if (response.headers["x-index"] == 0) {
                            return
                        }
                        if (xindex == response.headers["x-index"]) {
                            return
                        }
                        xindex = response.headers["x-index"]
                        infoLog("pushed " + xtype + "(" + xindex + ")")
                    })
                    return
                }
            }
        } catch (err) {
            console.error(err.name, err.message);
        }
    }

    function refresh() {
        resetLog()
        pullClipboard()
        pushClipboard()
        infoLog("loaded")
    }
</script>

</html>